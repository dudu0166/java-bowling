package bowling.model.state;

import bowling.model.Pins;
import bowling.model.state.finishedState.Miss;
import bowling.model.state.finishedState.Spare;
import org.junit.jupiter.api.Test;

import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.assertThatIllegalArgumentException;

class OpenTest {

    @Test
    void from_score_값이_스트라이크인_경우() {
        assertThatIllegalArgumentException()
                .isThrownBy(() -> Open.from(Pins.from(10)))
                .withMessage("오픈 상태는 스트라이크를 가질 수 없습니다.");
    }

    @Test
    void bowling_스페어() {
        Open open = Open.from(Pins.from(9));
        assertThat(open.bowling(1)).isInstanceOf(Spare.class);
    }

    @Test
    void bowling_미스() {
        Open open = Open.from(Pins.from(8));
        assertThat(open.bowling(1)).isInstanceOf(Miss.class);
    }

    @Test
    void bowling_두번째_투구가_최대_값을_벗어난_경우() {
        Open open = Open.from(Pins.from(9));
        assertThatIllegalArgumentException()
                .isThrownBy(() -> open.bowling(2))
                .withMessage("허용할 수 없는 값입니다.");

    }
}